// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: booking.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Response_Status int32

const (
	Response_OK    Response_Status = 0
	Response_ERROR Response_Status = 1
)

// Enum value maps for Response_Status.
var (
	Response_Status_name = map[int32]string{
		0: "OK",
		1: "ERROR",
	}
	Response_Status_value = map[string]int32{
		"OK":    0,
		"ERROR": 1,
	}
)

func (x Response_Status) Enum() *Response_Status {
	p := new(Response_Status)
	*p = x
	return p
}

func (x Response_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Response_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_booking_proto_enumTypes[0].Descriptor()
}

func (Response_Status) Type() protoreflect.EnumType {
	return &file_booking_proto_enumTypes[0]
}

func (x Response_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Response_Status.Descriptor instead.
func (Response_Status) EnumDescriptor() ([]byte, []int) {
	return file_booking_proto_rawDescGZIP(), []int{5, 0}
}

type PaymentResponse_Status int32

const (
	PaymentResponse_OK    PaymentResponse_Status = 0
	PaymentResponse_ERROR PaymentResponse_Status = 1
)

// Enum value maps for PaymentResponse_Status.
var (
	PaymentResponse_Status_name = map[int32]string{
		0: "OK",
		1: "ERROR",
	}
	PaymentResponse_Status_value = map[string]int32{
		"OK":    0,
		"ERROR": 1,
	}
)

func (x PaymentResponse_Status) Enum() *PaymentResponse_Status {
	p := new(PaymentResponse_Status)
	*p = x
	return p
}

func (x PaymentResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_booking_proto_enumTypes[1].Descriptor()
}

func (PaymentResponse_Status) Type() protoreflect.EnumType {
	return &file_booking_proto_enumTypes[1]
}

func (x PaymentResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentResponse_Status.Descriptor instead.
func (PaymentResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_booking_proto_rawDescGZIP(), []int{16, 0}
}

type PaymentStatusResponse_PaymentStatus int32

const (
	PaymentStatusResponse_SUCCESS PaymentStatusResponse_PaymentStatus = 0
	PaymentStatusResponse_FAILED  PaymentStatusResponse_PaymentStatus = 1
	PaymentStatusResponse_PENDING PaymentStatusResponse_PaymentStatus = 2
)

// Enum value maps for PaymentStatusResponse_PaymentStatus.
var (
	PaymentStatusResponse_PaymentStatus_name = map[int32]string{
		0: "SUCCESS",
		1: "FAILED",
		2: "PENDING",
	}
	PaymentStatusResponse_PaymentStatus_value = map[string]int32{
		"SUCCESS": 0,
		"FAILED":  1,
		"PENDING": 2,
	}
)

func (x PaymentStatusResponse_PaymentStatus) Enum() *PaymentStatusResponse_PaymentStatus {
	p := new(PaymentStatusResponse_PaymentStatus)
	*p = x
	return p
}

func (x PaymentStatusResponse_PaymentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentStatusResponse_PaymentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_booking_proto_enumTypes[2].Descriptor()
}

func (PaymentStatusResponse_PaymentStatus) Type() protoreflect.EnumType {
	return &file_booking_proto_enumTypes[2]
}

func (x PaymentStatusResponse_PaymentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentStatusResponse_PaymentStatus.Descriptor instead.
func (PaymentStatusResponse_PaymentStatus) EnumDescriptor() ([]byte, []int) {
	return file_booking_proto_rawDescGZIP(), []int{18, 0}
}

type AppointmentResultResponse_Status int32

const (
	AppointmentResultResponse_OK    AppointmentResultResponse_Status = 0
	AppointmentResultResponse_ERROR AppointmentResultResponse_Status = 1
)

// Enum value maps for AppointmentResultResponse_Status.
var (
	AppointmentResultResponse_Status_name = map[int32]string{
		0: "OK",
		1: "ERROR",
	}
	AppointmentResultResponse_Status_value = map[string]int32{
		"OK":    0,
		"ERROR": 1,
	}
)

func (x AppointmentResultResponse_Status) Enum() *AppointmentResultResponse_Status {
	p := new(AppointmentResultResponse_Status)
	*p = x
	return p
}

func (x AppointmentResultResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppointmentResultResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_booking_proto_enumTypes[3].Descriptor()
}

func (AppointmentResultResponse_Status) Type() protoreflect.EnumType {
	return &file_booking_proto_enumTypes[3]
}

func (x AppointmentResultResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppointmentResultResponse_Status.Descriptor instead.
func (AppointmentResultResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_booking_proto_rawDescGZIP(), []int{20, 0}
}

type Availability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doctorid  uint32                 `protobuf:"varint,1,opt,name=doctorid,proto3" json:"doctorid,omitempty"`
	Date      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Starttime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=starttime,proto3" json:"starttime,omitempty"`
	Endtime   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=endtime,proto3" json:"endtime,omitempty"`
}

func (x *Availability) Reset() {
	*x = Availability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_booking_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Availability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Availability) ProtoMessage() {}

func (x *Availability) ProtoReflect() protoreflect.Message {
	mi := &file_booking_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Availability.ProtoReflect.Descriptor instead.
func (*Availability) Descriptor() ([]byte, []int) {
	return file_booking_proto_rawDescGZIP(), []int{0}
}

func (x *Availability) GetDoctorid() uint32 {
	if x != nil {
		return x.Doctorid
	}
	return 0
}

func (x *Availability) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *Availability) GetStarttime() *timestamppb.Timestamp {
	if x != nil {
		return x.Starttime
	}
	return nil
}

func (x *Availability) GetEndtime() *timestamppb.Timestamp {
	if x != nil {
		return x.Endtime
	}
	return nil
}

type Appoinment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doctorid  uint32                 `protobuf:"varint,1,opt,name=doctorid,proto3" json:"doctorid,omitempty"`
	Userid    uint32                 `protobuf:"varint,2,opt,name=userid,proto3" json:"userid,omitempty"`
	Date      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	Starttime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=starttime,proto3" json:"starttime,omitempty"`
	Endtime   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=endtime,proto3" json:"endtime,omitempty"`
}

func (x *Appoinment) Reset() {
	*x = Appoinment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_booking_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Appoinment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Appoinment) ProtoMessage() {}

func (x *Appoinment) ProtoReflect() protoreflect.Message {
	mi := &file_booking_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Appoinment.ProtoReflect.Descriptor instead.
func (*Appoinment) Descriptor() ([]byte, []int) {
	return file_booking_proto_rawDescGZIP(), []int{1}
}

func (x *Appoinment) GetDoctorid() uint32 {
	if x != nil {
		return x.Doctorid
	}
	return 0
}

func (x *Appoinment) GetUserid() uint32 {
	if x != nil {
		return x.Userid
	}
	return 0
}

func (x *Appoinment) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *Appoinment) GetStarttime() *timestamppb.Timestamp {
	if x != nil {
		return x.Starttime
	}
	return nil
}

func (x *Appoinment) GetEndtime() *timestamppb.Timestamp {
	if x != nil {
		return x.Endtime
	}
	return nil
}

type Appointment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Doctorid  uint32                 `protobuf:"varint,2,opt,name=doctorid,proto3" json:"doctorid,omitempty"`
	Userid    uint32                 `protobuf:"varint,3,opt,name=userid,proto3" json:"userid,omitempty"`
	Date      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	Starttime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=starttime,proto3" json:"starttime,omitempty"`
	Endtime   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=endtime,proto3" json:"endtime,omitempty"`
}

func (x *Appointment) Reset() {
	*x = Appointment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_booking_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Appointment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Appointment) ProtoMessage() {}

func (x *Appointment) ProtoReflect() protoreflect.Message {
	mi := &file_booking_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Appointment.ProtoReflect.Descriptor instead.
func (*Appointment) Descriptor() ([]byte, []int) {
	return file_booking_proto_rawDescGZIP(), []int{2}
}

func (x *Appointment) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Appointment) GetDoctorid() uint32 {
	if x != nil {
		return x.Doctorid
	}
	return 0
}

func (x *Appointment) GetUserid() uint32 {
	if x != nil {
		return x.Userid
	}
	return 0
}

func (x *Appointment) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *Appointment) GetStarttime() *timestamppb.Timestamp {
	if x != nil {
		return x.Starttime
	}
	return nil
}

func (x *Appointment) GetEndtime() *timestamppb.Timestamp {
	if x != nil {
		return x.Endtime
	}
	return nil
}

type AppointmentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profiles []*Appointment `protobuf:"bytes,1,rep,name=profiles,proto3" json:"profiles,omitempty"`
}

func (x *AppointmentList) Reset() {
	*x = AppointmentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_booking_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointmentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentList) ProtoMessage() {}

func (x *AppointmentList) ProtoReflect() protoreflect.Message {
	mi := &file_booking_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentList.ProtoReflect.Descriptor instead.
func (*AppointmentList) Descriptor() ([]byte, []int) {
	return file_booking_proto_rawDescGZIP(), []int{3}
}

func (x *AppointmentList) GetProfiles() []*Appointment {
	if x != nil {
		return x.Profiles
	}
	return nil
}

type Cancelappointmentreq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid        uint32 `protobuf:"varint,1,opt,name=userid,proto3" json:"userid,omitempty"`
	Appointmentid uint32 `protobuf:"varint,2,opt,name=appointmentid,proto3" json:"appointmentid,omitempty"`
}

func (x *Cancelappointmentreq) Reset() {
	*x = Cancelappointmentreq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_booking_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cancelappointmentreq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cancelappointmentreq) ProtoMessage() {}

func (x *Cancelappointmentreq) ProtoReflect() protoreflect.Message {
	mi := &file_booking_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cancelappointmentreq.ProtoReflect.Descriptor instead.
func (*Cancelappointmentreq) Descriptor() ([]byte, []int) {
	return file_booking_proto_rawDescGZIP(), []int{4}
}

func (x *Cancelappointmentreq) GetUserid() uint32 {
	if x != nil {
		return x.Userid
	}
	return 0
}

func (x *Cancelappointmentreq) GetAppointmentid() uint32 {
	if x != nil {
		return x.Appointmentid
	}
	return 0
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  Response_Status `protobuf:"varint,1,opt,name=status,proto3,enum=pbB.Response_Status" json:"status,omitempty"`
	Message string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Types that are assignable to Payload:
	//
	//	*Response_Error
	//	*Response_Data
	Payload isResponse_Payload `protobuf_oneof:"payload"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_booking_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_booking_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_booking_proto_rawDescGZIP(), []int{5}
}

func (x *Response) GetStatus() Response_Status {
	if x != nil {
		return x.Status
	}
	return Response_OK
}

func (x *Response) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (m *Response) GetPayload() isResponse_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *Response) GetError() string {
	if x, ok := x.GetPayload().(*Response_Error); ok {
		return x.Error
	}
	return ""
}

func (x *Response) GetData() string {
	if x, ok := x.GetPayload().(*Response_Data); ok {
		return x.Data
	}
	return ""
}

type isResponse_Payload interface {
	isResponse_Payload()
}

type Response_Error struct {
	Error string `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

type Response_Data struct {
	Data string `protobuf:"bytes,4,opt,name=data,proto3,oneof"`
}

func (*Response_Error) isResponse_Payload() {}

func (*Response_Data) isResponse_Payload() {}

type NoParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NoParam) Reset() {
	*x = NoParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_booking_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoParam) ProtoMessage() {}

func (x *NoParam) ProtoReflect() protoreflect.Message {
	mi := &file_booking_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoParam.ProtoReflect.Descriptor instead.
func (*NoParam) Descriptor() ([]byte, []int) {
	return file_booking_proto_rawDescGZIP(), []int{6}
}

type AvailabilityList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Doctorid  uint32                 `protobuf:"varint,2,opt,name=doctorid,proto3" json:"doctorid,omitempty"`
	Date      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	Starttime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=starttime,proto3" json:"starttime,omitempty"`
	Endtime   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=endtime,proto3" json:"endtime,omitempty"`
}

func (x *AvailabilityList) Reset() {
	*x = AvailabilityList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_booking_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailabilityList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailabilityList) ProtoMessage() {}

func (x *AvailabilityList) ProtoReflect() protoreflect.Message {
	mi := &file_booking_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailabilityList.ProtoReflect.Descriptor instead.
func (*AvailabilityList) Descriptor() ([]byte, []int) {
	return file_booking_proto_rawDescGZIP(), []int{7}
}

func (x *AvailabilityList) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AvailabilityList) GetDoctorid() uint32 {
	if x != nil {
		return x.Doctorid
	}
	return 0
}

func (x *AvailabilityList) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *AvailabilityList) GetStarttime() *timestamppb.Timestamp {
	if x != nil {
		return x.Starttime
	}
	return nil
}

func (x *AvailabilityList) GetEndtime() *timestamppb.Timestamp {
	if x != nil {
		return x.Endtime
	}
	return nil
}

type AvailabilityListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Availabilities []*AvailabilityList `protobuf:"bytes,1,rep,name=Availabilities,proto3" json:"Availabilities,omitempty"`
}

func (x *AvailabilityListResponse) Reset() {
	*x = AvailabilityListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_booking_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailabilityListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailabilityListResponse) ProtoMessage() {}

func (x *AvailabilityListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_booking_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailabilityListResponse.ProtoReflect.Descriptor instead.
func (*AvailabilityListResponse) Descriptor() ([]byte, []int) {
	return file_booking_proto_rawDescGZIP(), []int{8}
}

func (x *AvailabilityListResponse) GetAvailabilities() []*AvailabilityList {
	if x != nil {
		return x.Availabilities
	}
	return nil
}

type ID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ID) Reset() {
	*x = ID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_booking_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ID) ProtoMessage() {}

func (x *ID) ProtoReflect() protoreflect.Message {
	mi := &file_booking_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ID.ProtoReflect.Descriptor instead.
func (*ID) Descriptor() ([]byte, []int) {
	return file_booking_proto_rawDescGZIP(), []int{9}
}

func (x *ID) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type Prescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appointmentid uint32 `protobuf:"varint,1,opt,name=appointmentid,proto3" json:"appointmentid,omitempty"`
	Doctorid      uint32 `protobuf:"varint,2,opt,name=doctorid,proto3" json:"doctorid,omitempty"`
	Userid        uint32 `protobuf:"varint,3,opt,name=userid,proto3" json:"userid,omitempty"`
	Medicine      string `protobuf:"bytes,4,opt,name=medicine,proto3" json:"medicine,omitempty"`
	Notes         string `protobuf:"bytes,5,opt,name=notes,proto3" json:"notes,omitempty"`
}

func (x *Prescription) Reset() {
	*x = Prescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_booking_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prescription) ProtoMessage() {}

func (x *Prescription) ProtoReflect() protoreflect.Message {
	mi := &file_booking_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prescription.ProtoReflect.Descriptor instead.
func (*Prescription) Descriptor() ([]byte, []int) {
	return file_booking_proto_rawDescGZIP(), []int{10}
}

func (x *Prescription) GetAppointmentid() uint32 {
	if x != nil {
		return x.Appointmentid
	}
	return 0
}

func (x *Prescription) GetDoctorid() uint32 {
	if x != nil {
		return x.Doctorid
	}
	return 0
}

func (x *Prescription) GetUserid() uint32 {
	if x != nil {
		return x.Userid
	}
	return 0
}

func (x *Prescription) GetMedicine() string {
	if x != nil {
		return x.Medicine
	}
	return ""
}

func (x *Prescription) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

type PrescriptionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Appointmentid uint32                 `protobuf:"varint,2,opt,name=appointmentid,proto3" json:"appointmentid,omitempty"`
	Doctorid      uint32                 `protobuf:"varint,3,opt,name=doctorid,proto3" json:"doctorid,omitempty"`
	Userid        uint32                 `protobuf:"varint,4,opt,name=userid,proto3" json:"userid,omitempty"`
	Medicine      string                 `protobuf:"bytes,5,opt,name=medicine,proto3" json:"medicine,omitempty"`
	Notes         string                 `protobuf:"bytes,6,opt,name=notes,proto3" json:"notes,omitempty"`
	Date          *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=date,proto3" json:"date,omitempty"`
	Starttime     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=starttime,proto3" json:"starttime,omitempty"`
	Endtime       *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=endtime,proto3" json:"endtime,omitempty"`
}

func (x *PrescriptionList) Reset() {
	*x = PrescriptionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_booking_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrescriptionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrescriptionList) ProtoMessage() {}

func (x *PrescriptionList) ProtoReflect() protoreflect.Message {
	mi := &file_booking_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrescriptionList.ProtoReflect.Descriptor instead.
func (*PrescriptionList) Descriptor() ([]byte, []int) {
	return file_booking_proto_rawDescGZIP(), []int{11}
}

func (x *PrescriptionList) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PrescriptionList) GetAppointmentid() uint32 {
	if x != nil {
		return x.Appointmentid
	}
	return 0
}

func (x *PrescriptionList) GetDoctorid() uint32 {
	if x != nil {
		return x.Doctorid
	}
	return 0
}

func (x *PrescriptionList) GetUserid() uint32 {
	if x != nil {
		return x.Userid
	}
	return 0
}

func (x *PrescriptionList) GetMedicine() string {
	if x != nil {
		return x.Medicine
	}
	return ""
}

func (x *PrescriptionList) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *PrescriptionList) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *PrescriptionList) GetStarttime() *timestamppb.Timestamp {
	if x != nil {
		return x.Starttime
	}
	return nil
}

func (x *PrescriptionList) GetEndtime() *timestamppb.Timestamp {
	if x != nil {
		return x.Endtime
	}
	return nil
}

type PrescriptionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profiles []*PrescriptionList `protobuf:"bytes,1,rep,name=Profiles,proto3" json:"Profiles,omitempty"`
}

func (x *PrescriptionListResponse) Reset() {
	*x = PrescriptionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_booking_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrescriptionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrescriptionListResponse) ProtoMessage() {}

func (x *PrescriptionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_booking_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrescriptionListResponse.ProtoReflect.Descriptor instead.
func (*PrescriptionListResponse) Descriptor() ([]byte, []int) {
	return file_booking_proto_rawDescGZIP(), []int{12}
}

func (x *PrescriptionListResponse) GetProfiles() []*PrescriptionList {
	if x != nil {
		return x.Profiles
	}
	return nil
}

type Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid       uint32 `protobuf:"varint,1,opt,name=userid,proto3" json:"userid,omitempty"`
	Appoinmentid uint32 `protobuf:"varint,2,opt,name=appoinmentid,proto3" json:"appoinmentid,omitempty"`
}

func (x *Req) Reset() {
	*x = Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_booking_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req) ProtoMessage() {}

func (x *Req) ProtoReflect() protoreflect.Message {
	mi := &file_booking_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req.ProtoReflect.Descriptor instead.
func (*Req) Descriptor() ([]byte, []int) {
	return file_booking_proto_rawDescGZIP(), []int{13}
}

func (x *Req) GetUserid() uint32 {
	if x != nil {
		return x.Userid
	}
	return 0
}

func (x *Req) GetAppoinmentid() uint32 {
	if x != nil {
		return x.Appoinmentid
	}
	return 0
}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data map[string]string `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // This will allow a map of string to string
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_booking_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_booking_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_booking_proto_rawDescGZIP(), []int{14}
}

func (x *Data) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type ConfirmAppointment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appoinmentid uint32 `protobuf:"varint,1,opt,name=appoinmentid,proto3" json:"appoinmentid,omitempty"`
	Doctorid     uint32 `protobuf:"varint,2,opt,name=doctorid,proto3" json:"doctorid,omitempty"`
	Userid       uint32 `protobuf:"varint,3,opt,name=userid,proto3" json:"userid,omitempty"`
	Fees         uint32 `protobuf:"varint,4,opt,name=fees,proto3" json:"fees,omitempty"`
	Status       string `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Paymentid    string `protobuf:"bytes,6,opt,name=paymentid,proto3" json:"paymentid,omitempty"`
}

func (x *ConfirmAppointment) Reset() {
	*x = ConfirmAppointment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_booking_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmAppointment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmAppointment) ProtoMessage() {}

func (x *ConfirmAppointment) ProtoReflect() protoreflect.Message {
	mi := &file_booking_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmAppointment.ProtoReflect.Descriptor instead.
func (*ConfirmAppointment) Descriptor() ([]byte, []int) {
	return file_booking_proto_rawDescGZIP(), []int{15}
}

func (x *ConfirmAppointment) GetAppoinmentid() uint32 {
	if x != nil {
		return x.Appoinmentid
	}
	return 0
}

func (x *ConfirmAppointment) GetDoctorid() uint32 {
	if x != nil {
		return x.Doctorid
	}
	return 0
}

func (x *ConfirmAppointment) GetUserid() uint32 {
	if x != nil {
		return x.Userid
	}
	return 0
}

func (x *ConfirmAppointment) GetFees() uint32 {
	if x != nil {
		return x.Fees
	}
	return 0
}

func (x *ConfirmAppointment) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ConfirmAppointment) GetPaymentid() string {
	if x != nil {
		return x.Paymentid
	}
	return ""
}

type PaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       PaymentResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=pbB.PaymentResponse_Status" json:"status,omitempty"`
	Message      string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Paymentid    string                 `protobuf:"bytes,3,opt,name=paymentid,proto3" json:"paymentid,omitempty"`       // PaymentIntent ID from Stripe
	Clientsecret string                 `protobuf:"bytes,4,opt,name=clientsecret,proto3" json:"clientsecret,omitempty"` // Separate field for client secret
	Userid       uint32                 `protobuf:"varint,5,opt,name=userid,proto3" json:"userid,omitempty"`
	Amount       uint32                 `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Appoinmentid uint32                 `protobuf:"varint,7,opt,name=appoinmentid,proto3" json:"appoinmentid,omitempty"`
}

func (x *PaymentResponse) Reset() {
	*x = PaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_booking_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentResponse) ProtoMessage() {}

func (x *PaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_booking_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentResponse.ProtoReflect.Descriptor instead.
func (*PaymentResponse) Descriptor() ([]byte, []int) {
	return file_booking_proto_rawDescGZIP(), []int{16}
}

func (x *PaymentResponse) GetStatus() PaymentResponse_Status {
	if x != nil {
		return x.Status
	}
	return PaymentResponse_OK
}

func (x *PaymentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PaymentResponse) GetPaymentid() string {
	if x != nil {
		return x.Paymentid
	}
	return ""
}

func (x *PaymentResponse) GetClientsecret() string {
	if x != nil {
		return x.Clientsecret
	}
	return ""
}

func (x *PaymentResponse) GetUserid() uint32 {
	if x != nil {
		return x.Userid
	}
	return 0
}

func (x *PaymentResponse) GetAmount() uint32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PaymentResponse) GetAppoinmentid() uint32 {
	if x != nil {
		return x.Appoinmentid
	}
	return 0
}

type Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID        uint32 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	PaymentID     string `protobuf:"bytes,2,opt,name=PaymentID,proto3" json:"PaymentID,omitempty"`
	Amount        uint32 `protobuf:"varint,3,opt,name=Amount,proto3" json:"Amount,omitempty"` // Changed to double to match consistency
	AppointmentID uint32 `protobuf:"varint,4,opt,name=AppointmentID,proto3" json:"AppointmentID,omitempty"`
}

func (x *Payment) Reset() {
	*x = Payment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_booking_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_booking_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_booking_proto_rawDescGZIP(), []int{17}
}

func (x *Payment) GetUserID() uint32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *Payment) GetPaymentID() string {
	if x != nil {
		return x.PaymentID
	}
	return ""
}

func (x *Payment) GetAmount() uint32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Payment) GetAppointmentID() uint32 {
	if x != nil {
		return x.AppointmentID
	}
	return 0
}

type PaymentStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  PaymentStatusResponse_PaymentStatus `protobuf:"varint,1,opt,name=status,proto3,enum=pbB.PaymentStatusResponse_PaymentStatus" json:"status,omitempty"`
	Message string                              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PaymentStatusResponse) Reset() {
	*x = PaymentStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_booking_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentStatusResponse) ProtoMessage() {}

func (x *PaymentStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_booking_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentStatusResponse.ProtoReflect.Descriptor instead.
func (*PaymentStatusResponse) Descriptor() ([]byte, []int) {
	return file_booking_proto_rawDescGZIP(), []int{18}
}

func (x *PaymentStatusResponse) GetStatus() PaymentStatusResponse_PaymentStatus {
	if x != nil {
		return x.Status
	}
	return PaymentStatusResponse_SUCCESS
}

func (x *PaymentStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AppointmentID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *AppointmentID) Reset() {
	*x = AppointmentID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_booking_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointmentID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentID) ProtoMessage() {}

func (x *AppointmentID) ProtoReflect() protoreflect.Message {
	mi := &file_booking_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentID.ProtoReflect.Descriptor instead.
func (*AppointmentID) Descriptor() ([]byte, []int) {
	return file_booking_proto_rawDescGZIP(), []int{19}
}

func (x *AppointmentID) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type AppointmentResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status            AppointmentResultResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=pbB.AppointmentResultResponse_Status" json:"status,omitempty"`
	Message           string                           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	AppointmentResult *Appointment                     `protobuf:"bytes,3,opt,name=appointment_result,json=appointmentResult,proto3" json:"appointment_result,omitempty"`
}

func (x *AppointmentResultResponse) Reset() {
	*x = AppointmentResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_booking_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointmentResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentResultResponse) ProtoMessage() {}

func (x *AppointmentResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_booking_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentResultResponse.ProtoReflect.Descriptor instead.
func (*AppointmentResultResponse) Descriptor() ([]byte, []int) {
	return file_booking_proto_rawDescGZIP(), []int{20}
}

func (x *AppointmentResultResponse) GetStatus() AppointmentResultResponse_Status {
	if x != nil {
		return x.Status
	}
	return AppointmentResultResponse_OK
}

func (x *AppointmentResultResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AppointmentResultResponse) GetAppointmentResult() *Appointment {
	if x != nil {
		return x.AppointmentResult
	}
	return nil
}

type ViewAppointment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Doctorid      uint32                 `protobuf:"varint,2,opt,name=doctorid,proto3" json:"doctorid,omitempty"`
	Userid        uint32                 `protobuf:"varint,3,opt,name=userid,proto3" json:"userid,omitempty"`
	Date          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	Starttime     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=starttime,proto3" json:"starttime,omitempty"`
	Endtime       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=endtime,proto3" json:"endtime,omitempty"`
	Paymentstatus string                 `protobuf:"bytes,7,opt,name=paymentstatus,proto3" json:"paymentstatus,omitempty"`
	Amount        uint32                 `protobuf:"varint,8,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *ViewAppointment) Reset() {
	*x = ViewAppointment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_booking_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewAppointment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewAppointment) ProtoMessage() {}

func (x *ViewAppointment) ProtoReflect() protoreflect.Message {
	mi := &file_booking_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewAppointment.ProtoReflect.Descriptor instead.
func (*ViewAppointment) Descriptor() ([]byte, []int) {
	return file_booking_proto_rawDescGZIP(), []int{21}
}

func (x *ViewAppointment) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ViewAppointment) GetDoctorid() uint32 {
	if x != nil {
		return x.Doctorid
	}
	return 0
}

func (x *ViewAppointment) GetUserid() uint32 {
	if x != nil {
		return x.Userid
	}
	return 0
}

func (x *ViewAppointment) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *ViewAppointment) GetStarttime() *timestamppb.Timestamp {
	if x != nil {
		return x.Starttime
	}
	return nil
}

func (x *ViewAppointment) GetEndtime() *timestamppb.Timestamp {
	if x != nil {
		return x.Endtime
	}
	return nil
}

func (x *ViewAppointment) GetPaymentstatus() string {
	if x != nil {
		return x.Paymentstatus
	}
	return ""
}

func (x *ViewAppointment) GetAmount() uint32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type ViewAppointmentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profiles []*ViewAppointment `protobuf:"bytes,1,rep,name=profiles,proto3" json:"profiles,omitempty"`
}

func (x *ViewAppointmentList) Reset() {
	*x = ViewAppointmentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_booking_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewAppointmentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewAppointmentList) ProtoMessage() {}

func (x *ViewAppointmentList) ProtoReflect() protoreflect.Message {
	mi := &file_booking_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewAppointmentList.ProtoReflect.Descriptor instead.
func (*ViewAppointmentList) Descriptor() ([]byte, []int) {
	return file_booking_proto_rawDescGZIP(), []int{22}
}

func (x *ViewAppointmentList) GetProfiles() []*ViewAppointment {
	if x != nil {
		return x.Profiles
	}
	return nil
}

var File_booking_proto protoreflect.FileDescriptor

var file_booking_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x70, 0x62, 0x42, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xca, 0x01, 0x0a, 0x0c, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72,
	0x69, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x74, 0x69,
	0x6d, 0x65, 0x22, 0xe0, 0x01, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x34, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xf1, 0x01, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x3f, 0x0a, 0x0f, 0x41, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x70, 0x62, 0x42, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x54, 0x0a, 0x14, 0x63, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x72,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x70,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x64,
	0x22, 0xa8, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x70, 0x62, 0x42, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x1b, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a,
	0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01,
	0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x09, 0x0a, 0x07, 0x4e,
	0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x22, 0xde, 0x01, 0x0a, 0x10, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x6f, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64,
	0x6f, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x59, 0x0a, 0x18, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62,
	0x42, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x0e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x22, 0x14, 0x0a, 0x02, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x22, 0x9a, 0x01, 0x0a, 0x0c, 0x70, 0x72, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0xce, 0x02, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x70,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x4d, 0x0a, 0x18, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x42, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x41, 0x0a, 0x03, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x22, 0x68, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x70, 0x62, 0x42, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xb6, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x41, 0x70,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x66, 0x65, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x22, 0x93, 0x02, 0x0a, 0x0f,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x70, 0x62, 0x42, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x69, 0x64, 0x22, 0x1b, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06,
	0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x01, 0x22, 0x7d, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x70,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x22, 0xaa, 0x01, 0x0a, 0x15, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x70, 0x62, 0x42,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x35, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45,
	0x53, 0x53, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x22, 0x1f, 0x0a,
	0x0d, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x22, 0xd2,
	0x01, 0x0a, 0x19, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x70,
	0x62, 0x42, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x12, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x42, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x11, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x1b, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x01, 0x22, 0xb3, 0x02, 0x0a, 0x0f, 0x56, 0x69, 0x65, 0x77, 0x41, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f,
	0x72, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f,
	0x72, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x47, 0x0a, 0x13, 0x56, 0x69, 0x65,
	0x77, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x30, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x42, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x41, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x32, 0xda, 0x05, 0x0a, 0x0e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x42, 0x2e, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x0d, 0x2e, 0x70, 0x62,
	0x42, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x10, 0x56, 0x69,
	0x65, 0x77, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x0c,
	0x2e, 0x70, 0x62, 0x42, 0x2e, 0x4e, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x1d, 0x2e, 0x70,
	0x62, 0x42, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x0e, 0x42,
	0x6f, 0x6f, 0x6b, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0f, 0x2e,
	0x70, 0x62, 0x42, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x0d,
	0x2e, 0x70, 0x62, 0x42, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a,
	0x0f, 0x56, 0x69, 0x65, 0x77, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x07, 0x2e, 0x70, 0x62, 0x42, 0x2e, 0x49, 0x44, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x42, 0x2e,
	0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x34, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x41, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x07, 0x2e, 0x70, 0x62, 0x42, 0x2e, 0x49, 0x44, 0x1a,
	0x14, 0x2e, 0x70, 0x62, 0x42, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x12, 0x56, 0x69, 0x65, 0x77, 0x41, 0x6c, 0x6c,
	0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0c, 0x2e, 0x70, 0x62,
	0x42, 0x2e, 0x4e, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x42, 0x2e,
	0x56, 0x69, 0x65, 0x77, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x11, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x42, 0x2e, 0x63,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x72, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x70, 0x62, 0x42, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x33, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x42, 0x2e, 0x70, 0x72, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0d, 0x2e, 0x70, 0x62, 0x42, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x10, 0x56, 0x69, 0x65, 0x77, 0x50,
	0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x2e, 0x70, 0x62,
	0x42, 0x2e, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x42, 0x2e, 0x50, 0x72, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x42, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x14,
	0x2e, 0x70, 0x62, 0x42, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x0c, 0x2e, 0x70, 0x62, 0x42,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x42, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x13, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x2e, 0x70, 0x62,
	0x42, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x1a,
	0x1e, 0x2e, 0x70, 0x62, 0x42, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_booking_proto_rawDescOnce sync.Once
	file_booking_proto_rawDescData = file_booking_proto_rawDesc
)

func file_booking_proto_rawDescGZIP() []byte {
	file_booking_proto_rawDescOnce.Do(func() {
		file_booking_proto_rawDescData = protoimpl.X.CompressGZIP(file_booking_proto_rawDescData)
	})
	return file_booking_proto_rawDescData
}

var file_booking_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_booking_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_booking_proto_goTypes = []any{
	(Response_Status)(0),                     // 0: pbB.Response.Status
	(PaymentResponse_Status)(0),              // 1: pbB.PaymentResponse.Status
	(PaymentStatusResponse_PaymentStatus)(0), // 2: pbB.PaymentStatusResponse.PaymentStatus
	(AppointmentResultResponse_Status)(0),    // 3: pbB.AppointmentResultResponse.Status
	(*Availability)(nil),                     // 4: pbB.Availability
	(*Appoinment)(nil),                       // 5: pbB.Appoinment
	(*Appointment)(nil),                      // 6: pbB.Appointment
	(*AppointmentList)(nil),                  // 7: pbB.AppointmentList
	(*Cancelappointmentreq)(nil),             // 8: pbB.cancelappointmentreq
	(*Response)(nil),                         // 9: pbB.Response
	(*NoParam)(nil),                          // 10: pbB.NoParam
	(*AvailabilityList)(nil),                 // 11: pbB.AvailabilityList
	(*AvailabilityListResponse)(nil),         // 12: pbB.AvailabilityListResponse
	(*ID)(nil),                               // 13: pbB.ID
	(*Prescription)(nil),                     // 14: pbB.prescription
	(*PrescriptionList)(nil),                 // 15: pbB.prescriptionList
	(*PrescriptionListResponse)(nil),         // 16: pbB.PrescriptionListResponse
	(*Req)(nil),                              // 17: pbB.Req
	(*Data)(nil),                             // 18: pbB.Data
	(*ConfirmAppointment)(nil),               // 19: pbB.ConfirmAppointment
	(*PaymentResponse)(nil),                  // 20: pbB.PaymentResponse
	(*Payment)(nil),                          // 21: pbB.Payment
	(*PaymentStatusResponse)(nil),            // 22: pbB.PaymentStatusResponse
	(*AppointmentID)(nil),                    // 23: pbB.AppointmentID
	(*AppointmentResultResponse)(nil),        // 24: pbB.AppointmentResultResponse
	(*ViewAppointment)(nil),                  // 25: pbB.ViewAppointment
	(*ViewAppointmentList)(nil),              // 26: pbB.ViewAppointmentList
	nil,                                      // 27: pbB.Data.DataEntry
	(*timestamppb.Timestamp)(nil),            // 28: google.protobuf.Timestamp
}
var file_booking_proto_depIdxs = []int32{
	28, // 0: pbB.Availability.date:type_name -> google.protobuf.Timestamp
	28, // 1: pbB.Availability.starttime:type_name -> google.protobuf.Timestamp
	28, // 2: pbB.Availability.endtime:type_name -> google.protobuf.Timestamp
	28, // 3: pbB.Appoinment.date:type_name -> google.protobuf.Timestamp
	28, // 4: pbB.Appoinment.starttime:type_name -> google.protobuf.Timestamp
	28, // 5: pbB.Appoinment.endtime:type_name -> google.protobuf.Timestamp
	28, // 6: pbB.Appointment.date:type_name -> google.protobuf.Timestamp
	28, // 7: pbB.Appointment.starttime:type_name -> google.protobuf.Timestamp
	28, // 8: pbB.Appointment.endtime:type_name -> google.protobuf.Timestamp
	6,  // 9: pbB.AppointmentList.profiles:type_name -> pbB.Appointment
	0,  // 10: pbB.Response.status:type_name -> pbB.Response.Status
	28, // 11: pbB.AvailabilityList.date:type_name -> google.protobuf.Timestamp
	28, // 12: pbB.AvailabilityList.starttime:type_name -> google.protobuf.Timestamp
	28, // 13: pbB.AvailabilityList.endtime:type_name -> google.protobuf.Timestamp
	11, // 14: pbB.AvailabilityListResponse.Availabilities:type_name -> pbB.AvailabilityList
	28, // 15: pbB.prescriptionList.date:type_name -> google.protobuf.Timestamp
	28, // 16: pbB.prescriptionList.starttime:type_name -> google.protobuf.Timestamp
	28, // 17: pbB.prescriptionList.endtime:type_name -> google.protobuf.Timestamp
	15, // 18: pbB.PrescriptionListResponse.Profiles:type_name -> pbB.prescriptionList
	27, // 19: pbB.Data.data:type_name -> pbB.Data.DataEntry
	1,  // 20: pbB.PaymentResponse.status:type_name -> pbB.PaymentResponse.Status
	2,  // 21: pbB.PaymentStatusResponse.status:type_name -> pbB.PaymentStatusResponse.PaymentStatus
	3,  // 22: pbB.AppointmentResultResponse.status:type_name -> pbB.AppointmentResultResponse.Status
	6,  // 23: pbB.AppointmentResultResponse.appointment_result:type_name -> pbB.Appointment
	28, // 24: pbB.ViewAppointment.date:type_name -> google.protobuf.Timestamp
	28, // 25: pbB.ViewAppointment.starttime:type_name -> google.protobuf.Timestamp
	28, // 26: pbB.ViewAppointment.endtime:type_name -> google.protobuf.Timestamp
	25, // 27: pbB.ViewAppointmentList.profiles:type_name -> pbB.ViewAppointment
	4,  // 28: pbB.BookingService.AddAvailability:input_type -> pbB.Availability
	10, // 29: pbB.BookingService.ViewAvailability:input_type -> pbB.NoParam
	5,  // 30: pbB.BookingService.BookAppoinment:input_type -> pbB.Appoinment
	13, // 31: pbB.BookingService.ViewAppointment:input_type -> pbB.ID
	13, // 32: pbB.BookingService.UserViewAppointment:input_type -> pbB.ID
	10, // 33: pbB.BookingService.ViewAllAppointment:input_type -> pbB.NoParam
	8,  // 34: pbB.BookingService.CancelAppointment:input_type -> pbB.cancelappointmentreq
	14, // 35: pbB.BookingService.AddPrescription:input_type -> pbB.prescription
	17, // 36: pbB.BookingService.ViewPrescription:input_type -> pbB.Req
	19, // 37: pbB.BookingService.CreatePayment:input_type -> pbB.ConfirmAppointment
	21, // 38: pbB.BookingService.UserPaymentSuccess:input_type -> pbB.Payment
	23, // 39: pbB.BookingService.GenerateAppointment:input_type -> pbB.AppointmentID
	9,  // 40: pbB.BookingService.AddAvailability:output_type -> pbB.Response
	12, // 41: pbB.BookingService.ViewAvailability:output_type -> pbB.AvailabilityListResponse
	9,  // 42: pbB.BookingService.BookAppoinment:output_type -> pbB.Response
	7,  // 43: pbB.BookingService.ViewAppointment:output_type -> pbB.AppointmentList
	7,  // 44: pbB.BookingService.UserViewAppointment:output_type -> pbB.AppointmentList
	26, // 45: pbB.BookingService.ViewAllAppointment:output_type -> pbB.ViewAppointmentList
	9,  // 46: pbB.BookingService.CancelAppointment:output_type -> pbB.Response
	9,  // 47: pbB.BookingService.AddPrescription:output_type -> pbB.Response
	16, // 48: pbB.BookingService.ViewPrescription:output_type -> pbB.PrescriptionListResponse
	20, // 49: pbB.BookingService.CreatePayment:output_type -> pbB.PaymentResponse
	22, // 50: pbB.BookingService.UserPaymentSuccess:output_type -> pbB.PaymentStatusResponse
	24, // 51: pbB.BookingService.GenerateAppointment:output_type -> pbB.AppointmentResultResponse
	40, // [40:52] is the sub-list for method output_type
	28, // [28:40] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_booking_proto_init() }
func file_booking_proto_init() {
	if File_booking_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_booking_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Availability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_booking_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Appoinment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_booking_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Appointment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_booking_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*AppointmentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_booking_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Cancelappointmentreq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_booking_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_booking_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*NoParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_booking_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*AvailabilityList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_booking_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*AvailabilityListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_booking_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_booking_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*Prescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_booking_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*PrescriptionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_booking_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*PrescriptionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_booking_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_booking_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_booking_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ConfirmAppointment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_booking_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*PaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_booking_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*Payment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_booking_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*PaymentStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_booking_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*AppointmentID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_booking_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*AppointmentResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_booking_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*ViewAppointment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_booking_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*ViewAppointmentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_booking_proto_msgTypes[5].OneofWrappers = []any{
		(*Response_Error)(nil),
		(*Response_Data)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_booking_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_booking_proto_goTypes,
		DependencyIndexes: file_booking_proto_depIdxs,
		EnumInfos:         file_booking_proto_enumTypes,
		MessageInfos:      file_booking_proto_msgTypes,
	}.Build()
	File_booking_proto = out.File
	file_booking_proto_rawDesc = nil
	file_booking_proto_goTypes = nil
	file_booking_proto_depIdxs = nil
}
